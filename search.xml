<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2018%2F02%2F24%2FExcel%E8%A7%A3%E6%9E%90%E3%80%81%E7%94%9F%E6%88%90%EF%BC%9APOI%20%E6%8A%80%E6%9C%AF%2F</url>
    <content type="text"><![CDATA[Excel 解析、生成： POI 技术HSSF 解析 Excel 97-2007 格式 （.xls） XSSF 解析 Excel 2007 格式 （.xlsx ） 1.导入maven坐标基于 maven 坐标导入 POI 支持 poi… jar 解析 HSSF poi ooxml .. jar 解析 XSSF （以来 POI 包 ） 解析 Excel 逻辑工作薄 --- sheet --- row --- cell 基于struts2进行文件上传的并解析 // 接收上传文件 private File file; public void setFile(File file) { this.file = file; } // 批量区域数据导入 @Action(value = &quot;area_batchImport&quot;) public String batchImport() throws IOException { //创建区域集合 List&lt;Area&gt; areas = new ArrayList&lt;Area&gt;(); // 编写解析代码逻辑 // 基于.xls 格式解析 HSSF，也可以直接使用父类Workbook,可以解析xls和xlsx // 1、 加载Excel文件对象 HSSFWorkbook hssfWorkbook = new HSSFWorkbook(new FileInputStream(file)); // 2、 读取一个sheet HSSFSheet sheet=hssfWorkbook.getSheetAt(0); // 3、 读取sheet中每一行 for (Row row : sheet) { // 一行数据 对应 一个区域对象 //根据自己导入的数据表格格式进行解析，通常第一行为表头直接跳过 if (row.getRowNum() == 0) { // 第一行 跳过 continue; } // 跳过空行 if (row.getCell(0) == null || StringUtils.isBlank(row.getCell(0).getStringCellValue())) { continue; } Area area = new Area(); area.setId(row.getCell(0).getStringCellValue()); area.setProvince(row.getCell(1).getStringCellValue()); area.setCity(row.getCell(2).getStringCellValue()); area.setDistrict(row.getCell(3).getStringCellValue()); area.setPostcode(row.getCell(4).getStringCellValue()); // 基于pinyin4j生成城市编码和简码,导入pingyin4J的坐标 String province = area.getProvince(); String city = area.getCity(); String district = area.getDistrict(); //去除省市区后缀 province = province.substring(0, province.length() - 1); city = city.substring(0, city.length() - 1); district = district.substring(0, district.length() - 1); // 简码 String[] headArray = PinYin4jUtils.getHeadByString(province + city + district); StringBuffer buffer = new StringBuffer(); for (String headStr : headArray) { buffer.append(headStr); } String shortcode = buffer.toString(); area.setShortcode(shortcode); // 城市编码 String citycode = PinYin4jUtils.hanziToPinyin(city, &quot;&quot;); area.setCitycode(citycode); areas.add(area); } // 调用业务层 areaService.saveBatch(areas); return NONE; } 生成 Excel 逻辑编写 ReportAction 添加 exportXls 方法 POI 生成 Excel 步骤写 Excel 过程一样，新建 Excel 文档 -- 新建 Sheet -- 新建 Row -- 新建 Cell 单元格 -- 写单元格数据 POI 生成 HSSF （xls）和 XSSF （xlsx） // 导出运单 报表 @Action(&quot;report_exportXls&quot;) public String exportXls() throws IOException { // 查询出 满足当前条件 结果数据 List&lt;WayBill&gt; wayBills = wayBillService.findWayBills(model); // 生成Excel文件 HSSFWorkbook hssfWorkbook = new HSSFWorkbook(); HSSFSheet sheet = hssfWorkbook.createSheet(&quot;运单数据&quot;); // 表头 HSSFRow headRow = sheet.createRow(0); headRow.createCell(0).setCellValue(&quot;运单号&quot;); headRow.createCell(1).setCellValue(&quot;寄件人&quot;); headRow.createCell(2).setCellValue(&quot;寄件人电话&quot;); headRow.createCell(3).setCellValue(&quot;寄件人地址&quot;); headRow.createCell(4).setCellValue(&quot;收件人&quot;); headRow.createCell(5).setCellValue(&quot;收件人电话&quot;); headRow.createCell(6).setCellValue(&quot;收件人地址&quot;); // 表格数据 for (WayBill wayBill : wayBills) { HSSFRow dataRow = sheet.createRow(sheet.getLastRowNum() + 1); dataRow.createCell(0).setCellValue(wayBill.getWayBillNum()); dataRow.createCell(1).setCellValue(wayBill.getSendName()); dataRow.createCell(2).setCellValue(wayBill.getSendMobile()); dataRow.createCell(3).setCellValue(wayBill.getSendAddress()); dataRow.createCell(4).setCellValue(wayBill.getRecName()); dataRow.createCell(5).setCellValue(wayBill.getRecMobile()); dataRow.createCell(6).setCellValue(wayBill.getRecAddress()); } // 下载导出 // 设置头信息 ServletActionContext.getResponse().setContentType( &quot;application/vnd.ms-excel&quot;); String filename = &quot;运单数据.xls&quot;; //设置浏览器编码 String agent = ServletActionContext.getRequest() .getHeader(&quot;user-agent&quot;); filename = FileUtils.encodeDownloadFilename(filename, agent); //设置文件头以下载形式打开 ServletActionContext.getResponse().setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=&quot; + filename); ServletOutputStream outputStream = ServletActionContext.getResponse() .getOutputStream(); hssfWorkbook.write(outputStream); // 关闭 hssfWorkbook.close(); return NONE; } ##生成pdf文件 ###使用java原生代码生成pdf文件 @Action(“report_exportPdf”) public String exportPdf() throws IOException, DocumentException { // 查询出 满足当前条件 结果数据 List wayBills = wayBillService.findWayBills(model); // 下载导出 // 设置头信息 ServletActionContext.getResponse().setContentType(&quot;application/pdf&quot;); String filename = &quot;运单数据.pdf&quot;; String agent = ServletActionContext.getRequest() .getHeader(&quot;user-agent&quot;); filename = FileUtils.encodeDownloadFilename(filename, agent); ServletActionContext.getResponse().setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=&quot; + filename); // 生成PDF文件 Document document = new Document(); PdfWriter.getInstance(document, ServletActionContext.getResponse() .getOutputStream()); document.open(); // 写PDF数据 // 向document 生成pdf表格 Table table = new Table(7); table.setWidth(80); // 宽度 table.setBorder(1); // 边框 table.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER); // 水平对齐方式 table.getDefaultCell().setVerticalAlignment(Element.ALIGN_TOP); // 垂直对齐方式 // 设置表格字体 BaseFont cn = BaseFont.createFont(&quot;STSongStd-Light&quot;, &quot;UniGB-UCS2-H&quot;, false); Font font = new Font(cn, 10, Font.NORMAL, Color.BLUE); // 写表头 table.addCell(buildCell(&quot;运单号&quot;, font)); table.addCell(buildCell(&quot;寄件人&quot;, font)); table.addCell(buildCell(&quot;寄件人电话&quot;, font)); table.addCell(buildCell(&quot;寄件人地址&quot;, font)); table.addCell(buildCell(&quot;收件人&quot;, font)); table.addCell(buildCell(&quot;收件人电话&quot;, font)); table.addCell(buildCell(&quot;收件人地址&quot;, font)); // 写数据 for (WayBill wayBill : wayBills) { table.addCell(buildCell(wayBill.getWayBillNum(), font)); table.addCell(buildCell(wayBill.getSendName(), font)); table.addCell(buildCell(wayBill.getSendMobile(), font)); table.addCell(buildCell(wayBill.getSendAddress(), font)); table.addCell(buildCell(wayBill.getRecName(), font)); table.addCell(buildCell(wayBill.getRecMobile(), font)); table.addCell(buildCell(wayBill.getRecAddress(), font)); } // 将表格加入文档 document.add(table); document.close(); return NONE; } private Cell buildCell(String content, Font font) throws BadElementException { Phrase phrase = new Phrase(content, font); return new Cell(phrase); } ###使用jasperReport技术生成pdf文件 @Action(“report_exportJasperPdf”) public String exportJasperPdf() throws IOException, DocumentException, JRException, SQLException { // 查询出 满足当前条件 结果数据 List wayBills = wayBillService.findWayBills(model); // 下载导出 // 设置头信息 ServletActionContext.getResponse().setContentType(&quot;application/pdf&quot;); String filename = &quot;运单数据.pdf&quot;; String agent = ServletActionContext.getRequest() .getHeader(&quot;user-agent&quot;); filename = FileUtils.encodeDownloadFilename(filename, agent); ServletActionContext.getResponse().setHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=&quot; + filename); // 根据 jasperReport模板 生成pdf,借助ireport工具生成模板 // 读取模板文件 String jrxml = ServletActionContext.getServletContext().getRealPath( &quot;/WEB-INF/jasper/waybill.jrxml&quot;); JasperReport report = JasperCompileManager.compileReport(jrxml); // 设置模板数据，根据模板样式来设置参数 // Parameter变量 Map&lt;String, Object&gt; paramerters = new HashMap&lt;String, Object&gt;(); paramerters.put(&quot;company&quot;, &quot;传智播客&quot;); // Field变量 JasperPrint jasperPrint = JasperFillManager.fillReport(report, paramerters, new JRBeanCollectionDataSource(wayBills)); // 生成PDF客户端 JRPdfExporter exporter = new JRPdfExporter(); exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint); exporter.setParameter(JRExporterParameter.OUTPUT_STREAM, ServletActionContext.getResponse().getOutputStream()); exporter.exportReport();// 导出 ServletActionContext.getResponse().getOutputStream().close(); return NONE; } } ##附加ireport工具使用 ##IReport 报表模板简介和设置中文生成 ###1、 新建 JasperReport 模板文件 .jrxml ###2、 设置默认语言 对输入中文内容 设置组件属性 在 IReport 引入 ITextAsian.jar 字库 在工具选项中 ###3、 了解报表模板结构 Title: 报表标题 PageHeader: 页眉 ColumnHeader: 表格列标题 Detail： 表格数据内容 ColumnFooter： 表格页脚 PageFooter： 页脚 Summary: 摘要 ###4、 常用报表组件 设置预览格式为 PDF ##4.3． IReport 配置数据库连接，基于数据表生成报表 1、 点击按钮配置数据库连接 新建 JDBC 连接 2、 在 ireport 添加 oracle 的 jdbc 驱动 3、 通过 ReportQuery 查询数据库 4、 设计报表 ##4.4． JasperResport 根据模板文件 生成报表 1、 设置 ireport 字段 自动换行 2、 将 waybill.jrxml 复制 bos_management 3、 在 waybill_manage.html 页面添加按钮 4、 在 common-parent 导入 jasperReport 开发包 5、 在 ReportAction 添加 exportJasperPdf 方法]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F02%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
